namespace DemonChess
{
    internal class Global
    {
        public readonly int[] ArrPieceEvaluate = { 0, 100, 325, 325, 500, 1000, 1100 };

        public readonly int[] ArrPiecePossition =
        {
            1, 2, 3, 4, 5, 6, 7, 8, 0, 0, 0, 0, 0, 0, 0, 0,
            9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            25, 26, 27, 28, 29, 30, 31, 32, 0, 0, 0, 0, 0, 0, 0, 0,
            17, 18, 19, 20, 21, 22, 23, 24, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] ArrSide =
        {
            2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
            2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] ArrValue =
        {
            4, 3, 2, 5, 6, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0,
            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            4, 3, 2, 5, 6, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] BishopBlackEvaluate =
        {
            -10, -10, -15, -10, -10, -15, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 5, 5, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 5, 5, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] BishopEvaluateEnding =
        {
            -18, -12, -9, -6, -6, -9, -12, -18, 0, 0, 0, 0, 0, 0, 0, 0,
            -12, -6, -3, 0, 0, -3, -6, -12, 0, 0, 0, 0, 0, 0, 0, 0,
            -9, -3, 0, 3, 3, 0, -3, -9, 0, 0, 0, 0, 0, 0, 0, 0,
            -6, 0, 3, 6, 6, 3, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0,
            -6, 0, 3, 6, 6, 3, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0,
            -9, -3, 0, 3, 3, 0, -3, -9, 0, 0, 0, 0, 0, 0, 0, 0,
            -12, -6, -3, 0, 0, -3, -6, -12, 0, 0, 0, 0, 0, 0, 0, 0,
            -18, -12, -9, -6, -6, -9, -12, -18, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] BishopWhiteEvaluate =
        {
            -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 5, 5, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 5, 5, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, -10, -15, -10, -10, -15, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] KingBlackEvaluate =
        {
            -10, 0, -20, -35, -35, -20, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -15, -10, -30, -40, -40, -30, -10, -15, 0, 0, 0, 0, 0, 0, 0, 0,
            -30, -30, -40, -60, -60, -40, -30, -30, 0, 0, 0, 0, 0, 0, 0, 0,
            -70, -70, -70, -70, -70, -70, -70, -70, 0, 0, 0, 0, 0, 0, 0, 0,
            -80, -80, -80, -80, -80, -80, -80, -80, 0, 0, 0, 0, 0, 0, 0, 0,
            -80, -80, -80, -80, -80, -80, -80, -80, 0, 0, 0, 0, 0, 0, 0, 0,
            -80, -80, -80, -80, -80, -80, -80, -80, 0, 0, 0, 0, 0, 0, 0, 0,
            -80, -80, -80, -80, -80, -80, -80, -80, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] KingWhiteEvaluate =
        {
            -80, -80, -80, -80, -80, -80, -80, -80, 0, 0, 0, 0, 0, 0, 0, 0,
            -80, -80, -80, -80, -80, -80, -80, -80, 0, 0, 0, 0, 0, 0, 0, 0,
            -80, -80, -80, -80, -80, -80, -80, -80, 0, 0, 0, 0, 0, 0, 0, 0,
            -80, -80, -80, -80, -80, -80, -80, -80, 0, 0, 0, 0, 0, 0, 0, 0,
            -70, -70, -70, -70, -70, -70, -70, -70, 0, 0, 0, 0, 0, 0, 0, 0,
            -30, -30, -40, -60, -60, -40, -30, -30, 0, 0, 0, 0, 0, 0, 0, 0,
            -15, -10, -30, -40, -40, -30, -10, -15, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, -20, -35, -35, -20, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] KnightBlackEvaluate =
        {
            -10, -15, -10, -10, -10, -10, -15, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 5, 5, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 5, 5, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] KnightEvaluateEnding =
        {
            -10, -5, -5, -5, -5, -5, -5, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -5, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
            -5, 0, 5, 5, 5, 5, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
            -5, 0, 5, 10, 10, 5, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
            -5, 0, 5, 10, 10, 5, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
            -5, 0, 5, 5, 5, 5, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
            -5, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, -5, -5, -5, -5, -5, -5, -10, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] KnightWhiteEvaluate =
        {
            -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 5, 5, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 10, 10, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 5, 5, 5, 5, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0,
            -10, -15, -10, -10, -10, -10, -15, -10, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] PawnBlackEvaluate =
        {
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, -20, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            1, 2, 3, -10, -10, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            2, 4, 6, 8, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            3, 6, 9, 12, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0,
            4, 8, 12, 16, 16, 12, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0,
            5, 10, 15, 20, 20, 15, 10, 5, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] PawnEvaluateEnding =
        {
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] PawnWhiteEvaluate =
        {
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            5, 10, 15, 20, 20, 15, 10, 5, 0, 0, 0, 0, 0, 0, 0, 0,
            4, 8, 12, 16, 16, 12, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0,
            3, 6, 9, 12, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0,
            2, 4, 6, 8, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0,
            1, 2, 3, -10, -10, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, -20, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] QueenBlackEvaluate =
        {
            -2, -2, -2, 0, 0, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] QueenEvaluateEnding =
        {
            -24, -16, -12, -8, -8, -12, -16, -24, 0, 0, 0, 0, 0, 0, 0, 0,
            -16, -8, -4, 0, 0, -4, -8, -16, 0, 0, 0, 0, 0, 0, 0, 0,
            -12, -4, 0, 4, 4, 0, -4, -12, 0, 0, 0, 0, 0, 0, 0, 0,
            -8, 0, 4, 8, 8, 4, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0,
            -8, 0, 4, 8, 8, 4, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0,
            -12, -4, 0, 4, 4, 0, -4, -12, 0, 0, 0, 0, 0, 0, 0, 0,
            -16, -8, -4, 0, 0, -4, -8, -16, 0, 0, 0, 0, 0, 0, 0, 0,
            -24, -16, -12, -8, -8, -12, -16, -24, 0, 0, 0, 0, 0, 0, 0, 0
        };

        public readonly int[] QueenWhiteEvaluate =
        {
            -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            -2, -2, -2, 0, 0, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0
        };
    }
}